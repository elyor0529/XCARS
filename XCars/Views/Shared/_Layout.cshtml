@using XCars.Resourses
@using XCars.Common

<!DOCTYPE html>
<html>
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    @if (ViewBag.openGraph != null)
    {
        foreach (var item in ViewBag.openGraph as Dictionary<string, string>)
        {
            <meta property="og:@item.Key" content="@item.Value" />
        }
    }

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link href="~/Content/bootstrap-select.min.css" rel="stylesheet" />
    <link href="~/Content/style.css" rel="stylesheet" />

    <link rel="icon" type="image/png" sizes="192x192" href="~/Content/images/favicon/android-chrome-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/Content/images/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="~/Content/images/favicon/android-chrome-256x256.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/Content/images/favicon/favicon-16x16.png">

    <title>EMCar - @ViewBag.Title</title>
</head>
<body>
    <div id="fb-root"></div>
    <script>
        (function(d, s, id) {
          var js, fjs = d.getElementsByTagName(s)[0];
          if (d.getElementById(id)) return;
          js = d.createElement(s); js.id = id;
          js.src = 'https://connect.facebook.net/ru_RU/sdk.js#xfbml=1&version=v2.11&appId=483590832023997';
          fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>

    @Html.Partial("_Header")
    
    @*<div class="container">
        <div class="col-md-12">
            @RenderBody()
        </div>
    </div>*@

    @RenderBody()

    @Html.Partial("_Footer")

    @if (!User.Identity.IsAuthenticated)
    {
        ViewBag.ReturnUrl = Request.Url.LocalPath;
        @Html.Partial("_LoginAndRegisterModal");
    }
    

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    @if (!User.Identity.IsAuthenticated)
    {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,900&amp;subset=cyrillic" rel="stylesheet">

    <!--Reference the SignalR library. -->
    <script type="text/javascript" src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script type="text/javascript" src="/signalr/hubs"></script>

    <script>
        @if (User.Identity.IsAuthenticated)
        {
            <text>
                //UserStateHUB
                var userStateHub = $.connection.userStateHub;
                userStateHub.client.userIsOnline = function (userID) {
                    //alert("user " + userID + " is online!");
                    $(".userState_" + userID).text("@Resource.Online");
                };

                userStateHub.client.userIsOffline = function (userID) {
                    //alert("user " + userID + " is offline!");
                    $(".userState_" + userID).text("@Resource.Offline");
                };

                $.connection.hub.start().done(function () {
                    //Calls the notify method of the server
                    //alert("hub started!");
                    userStateHub.server.addConnectionIDforCurrentUser("@User.Identity.Name");
                });

                userStateHub.client.reconnect = function () {
                    userStateHub.server.addConnectionIDforCurrentUser("@User.Identity.Name");
                }
            </text>
        }
    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
@*<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>*@
<script type="text/javascript">
    $(document).ready(function () {
        StartLoadingImagesAsync();
        //LoadImagesAsync();

        //login modal
        $(function () {
            $(".mod_to_register").click(function (e) {
                e.preventDefault();
                $(".modal-login").removeClass('active');
                $('.modal-register').addClass('active');
            })
        });
        $(function () {
            $(".mod_to_login").click(function (e) {
                e.preventDefault();
                $(".modal-register").removeClass('active');
                $('.modal-login').addClass('active');
            })
        });
        
    });

    function StartLoadingImagesAsync()
    {
        //var allLoaded = false;
        var interval;
        var attemptsLimit = 100;
        var attemptsCount = 0;
        interval = setInterval(function () {
            attemptsCount++;
            LoadImagesAsync();
            if (!$("img").is(".async"))
                clearInterval(interval);
            if (attemptsLimit <= attemptsCount) {
                ShowImageErrorBanner();
                clearInterval(interval);
            }
        }, 3000);
    }

    function LoadImagesAsync() {
        $("img.async").each(function (i, elem) {
            if ($(elem).attr("finalSrc") != "") {
                var downloadingImage = new Image();
                downloadingImage.onload = function () {
                    $(elem).attr("src", this.src);
                    $(elem).removeClass("async");
                    $(elem).removeAttr("finalSrc");
                };
                //downloadingImage.onerror = function () {
                //    alert("Error loading: " + $(elem).attr("finalSrc"));
                //    StartReloadingImage();
                //};
                downloadingImage.src = $(elem).attr("finalSrc");
            }
        });

        //$(".name").each(function () {
        //    if ($(this).height() > 25) {
        //        $(this).addClass('big_name');
        //    }
        //});
    }

    function ShowImageErrorBanner() {
        $("img.async").each(function (i, elem) {
            var downloadingImage = new Image();
            downloadingImage.onload = function () {
                $(elem).attr("src", this.src);
                $(elem).removeClass("async");
            };
            downloadingImage.src = $(elem).attr("@XCarsConfiguration.BucketEndpoint" + " " + "@XCarsConfiguration.BucketName" + "/" + "@XCarsConfiguration.AutoPhotosUploadUrl" + "@XCarsConfiguration.AutoNoPhotoName" + "@XCarsConfiguration.PhotoExtension");
        });
    }

    if (window.location.hash && window.location.hash == '#_=_') {
        if (window.history && history.pushState) {
            window.history.pushState("", document.title, window.location.pathname);
        } else {
            // Prevent scrolling by storing the page's current scroll offset
            var scroll = {
                top: document.body.scrollTop,
                left: document.body.scrollLeft
            };
            window.location.hash = '';
            // Restore the scroll offset, should be flicker free
            document.body.scrollTop = scroll.top;
            document.body.scrollLeft = scroll.left;
        }
    }
</script>